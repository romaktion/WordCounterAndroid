apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.romaktion.wordcounter"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
				arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

				// Sets a flag to enable format macro constants for the C compiler.
				cFlags "-D__STDC_FORMAT_MACROS"

				// Sets optional flags for the C++ compiler.
				cppFlags "-fexceptions", "-frtti"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
	
	sourceSets {
		main {
			jniLibs.srcDirs 'src/main/cpp/jniLibs/'
		}
	}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.0.0'
}

//task ADBConnect
//ADBConnect {
//	exec {
//		commandLine = ['cmd','/c','ADBConnect.bat']
//	}
//}

task gitClone(dependsOn: preBuild) {
	exec {
		commandLine = ['cmd','/c','GitClone.bat']
	}
}

task copyJNILibs(dependsOn: gitClone) {
	copy {
		from "src/main/cpp/jniLibs"
		into "src/main/cpp/WordCounter/jniLibs"
	}
}

task myCopyFiles {
	copy {
		from 'src/main/cpp/jniLibs/armeabi-v7a/lib/libiconv.so'
		into "build/intermediates/cmake/debug/obj/armeabi-v7a"
	}
	copy {
		from 'src/main/cpp/jniLibs/arm64-v8a/lib/libiconv.so'
		into "build/intermediates/cmake/debug/obj/arm64-v8a"
	}
	copy {
		from 'src/main/cpp/jniLibs/x86/lib/libiconv.so'
		into "build/intermediates/cmake/debug/obj/x86"
	}
	copy {
		from 'src/main/cpp/jniLibs/x86_64/lib/libiconv.so'
		into "build/intermediates/cmake/debug/obj/x86_64"
	}
}
preBuild.dependsOn myCopyFiles

task myClean(type: Delete) {
	delete '/src/main/cpp/WordCounter'
}
clean.dependsOn myClean
